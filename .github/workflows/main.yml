# This is a basic workflow to help you get started with Actions

name: CI-CD # nome do workflow

# Controls when the workflow will run
on: # definicao dos eventos que vao startar o workflow
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: # permite a execucao manual do workflow

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: # listagem dos jobs
  # This workflow contains a single job called "build"
  Build-CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest # agente (runner) que vao rodar o job

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: # executa as acoes do job 
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Docker Login # nome do step
        uses: docker/login-action@v1.10.0 # step que faz o login no repositorio Docker     
        with: # Define os parametros
          username: ${{ secrets.DOCKERHUB_USER }} # utilizando dados sensíveis que devem ser criados e armazenados em Settings > Secrets
          password: ${{ secrets.DOCKERHUB_PWD }} # utilizando dados sensíveis que devem ser criados e armazenados em Settings > Secrets
      - name: Build and push Docker images # nome do step
        uses: docker/build-push-action@v2.6.1 # step que faz o build no repositorio Docker   
        with: 
          context: ./src # contexto da aplicacao onde estao os arquivos que serao enviados para o DockerHub
          file: ./src/Dockerfile # arquivo Dockerfile
          push: true # definir como true para fazer o push no DockerHub, pois default = false
          # abaixo: parametro com o numero da execucao do workflow utilizada como numero da versao (tag)
          tags: |
            creativti/rotten-potatoes:latest
            creativti/rotten-potatoes:${{ github.run_number }}
            
  Build-CD:
    runs-on: ubuntu-latest # agente (runner) que vao rodar o job
    needs: [Build-CI] # Torna este build dependente do Build-CI
    steps:
      - uses: actions/checkout@v2
      - name: Kubernetes set context # nome do step
        uses: Azure/k8s-set-context@v1.1 # step que faz autenticacao no cluster kubernetes (digital ocean)  
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }} # utilizando dados sensíveis que devem ser criados e armazenados em Settings > Secrets
      - name: Deploy Mongo # nome do step
        uses: Azure/k8s-deploy@v1 # step que faz o deploy da aplicacao (roda os manifests) no cluster kubernetes (digital ocean) 
        with:        
          manifests: |
            manifests-kubernetes/mongo-deployment.yaml
            manifests-kubernetes/mongo-service.yaml
      - name: Deploy Web # nome do step
        uses: Azure/k8s-deploy@v1 # step que faz o deploy da aplicacao (roda os manifests) no cluster kubernetes (digital ocean) 
        with:        
          manifests: |
            manifests-kubernetes/web-deployment.yaml
            manifests-kubernetes/web-service.yaml
          images: creativti/rotten-potatoes:${{ github.run_number }}
      - name: Deploy HPA Web # nome do step
        uses: Azure/k8s-deploy@v1 # step que faz o deploy da aplicacao (roda os manifests) no cluster kubernetes (digital ocean) 
        with:        
          manifests: |
            manifests-kubernetes/hpa.yaml  
